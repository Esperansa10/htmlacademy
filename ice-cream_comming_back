var cardsData = [
  {
    inStock: true,
    imgUrl: 'gllacy/choco.jpg',
    text: 'Сливочно-кофейное с кусочками шоколада',
    price: 310,
    isHit: true,
    specialOffer: 'Двойная порция сиропа бесплатно!'
  },
  {
    inStock: false,
    imgUrl: 'gllacy/lemon.jpg',
    text: 'Сливочно-лимонное с карамельной присыпкой',
    price: 125,
    isHit: false
  },
  {
    inStock: true,
    imgUrl: 'gllacy/cowberry.jpg',
    text: 'Сливочное с брусничным джемом',
    price: 170,
    isHit: false
  },
  {
    inStock: true,
    imgUrl: 'gllacy/cookie.jpg',
    text: 'Сливочное с кусочками печенья',
    price: 250,
    isHit: false
  },
  {
    inStock: true,
    imgUrl: 'gllacy/creme-brulee.jpg',
    text: 'Сливочное крем-брюле',
    price: 190,
    isHit: false
  }
];


var makeItem = function (tagName, className, text) {
  var element = document.createElement(tagName);
  element.classList.add(className);
  if (text) {
    element.textContent = text;
  }
  
  
  return element;
  
  }

// создать карточку из 1 элемента масива 
var makeCard = function (card) {
  
  var listItem = makeItem('li', '.good');

  var title = makeItem('h2', 'good__description', card.text);
  listItem.appendChild(title);

  var picture = makeItem('img', 'good__image', card.text);
  picture.src = card.imgUrl;
  picture.alt = card.text;
  listItem.appendChild(picture);

  var price = makeItem('p', 'good__price', card.price);
  
  listItem.appendChild(price);
// доступность товара
 
  var availabilityClass = 'good--available';
  if (!card.inStock) {
    availabilityClass = 'good--unavailable';
  }
  listItem.classList.add(availabilityClass);

    
  

  if (card.isHit) {
     listItem.classList.add('good--hit');
    // var hit = makeItem('p', 'good--hit');
     //listItem.appendChild(hit);
  }
  
  
  // console.log(card.specialOffer); 
  if (card.specialOffer) {
    var specialoffer = makeItem('p', 'good__special-offer', card.specialOffer);
    //listItem.classList.add('good__special-offer');
    listItem.appendChild(specialoffer);
  }

  return listItem;
  
  }
   

var renderCards = function (cardsData) {
  var list = document.querySelector('ul');
  for (var i = 0; i < cardsData.length; i++) {
  var card = makeCard(cardsData[i]);
  list.appendChild(card);
}
}
  
  renderCards(cardsData); 

/* Техническое задание

Мяу! Помнишь магазин мороженого? Нужно создать карточки товаров, основываясь на данных, полученных с сервера.

Данные — массив объектов cardsData, один элемент соответствует одному товару. У каждого объекта есть следующие свойства:

- inStock — доступность товара. Если значение true — товар доступен (для такого продукта верстальщик подготовил класс good--available), если false — продукта нет в наличии (товар с классом good--unavailable).
- imgUrl — ссылка на изображение товара.
- text — название продукта.
- price — цена.
- isHit — является ли товар хитом продаж. Если значение true — продукт «хитовый». Для такого товара подготовлен класс good--hit.
- specialOffer — специальное предложение, которое есть только у хита продаж. Должно находиться в абзаце с классом good__special-offer и быть самым последним дочерним элементом в карточке.

Вот пример вёрстки одной карточки в каталоге:

<ul class="goods">
  <li class="good">
    <h2 class="good__description">Сливочно-кофейное с кусочками шоколада</h2>
    <img class="good__image" src="gllacy/choco.jpg" alt="Сливочно-кофейное с кусочками шоколада">
    <p class="good__price">110₽/кг</p>
  </li>
  ...
</ul>

Обрати внимание, что текст в атрибуте alt у изображения должен быть таким же, как и название товара.

Создай функцию renderCards, которая будет принимать на вход массив данных, вызови её, передав cardsData, и отрисуй на странице карточки мороженого.

*/
